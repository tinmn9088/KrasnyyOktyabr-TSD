// @strict-types
#Область ПрограммныйИнтерфейс

// Функция проверяет, что задание выполнено для комплектовщика.
// 
// Параметры:
//  Задание - ДокументСсылка.Задание
//  Комплектовщик - СправочникСсылка.Комплектовщики
// 
// Возвращаемое значение:
//  Булево
Функция ЗаданиеВыполненоДляКомплектовщика(Знач Задание, Знач Комплектовщик) Экспорт
    
    Возврат Истина;
    
КонецФункции

// Функция извлекает GTIN из штрихкода, определяет процент уценки,
// уменьшает значение реквизита "Количество" в табличной части "ЗаданиеНаОтбор",
// записывает штрихкод в документ "ВнПеремОтпуск" и возвращает описание обработки.
// 
// Параметры:
//  Задание - ДокументСсылка.Задание
//  Комплектовщик - СправочникСсылка.Комплектовщики - Комплектовщик, выполняющий задание
//  Штрихкод - Строка
//
// Возвращаемое значение:
//  См. НовоеОписаниеОбработкиШтрихкода
Функция ОбработатьШтрихкодРоссыпи(Знач Задание, Знач Комплектовщик, Знач Штрихкод) Экспорт

    НачатьТранзакцию();

    Попытка

        ОписаниеОбработкиШтрихкода = НовоеОписаниеОбработкиШтрихкода();
        
        // 1. Извлечение кода маркировки из штрихкода
        КодМаркировки = Сред(Штрихкод, 1, 31);
        
        // 2. Получение GTIN
        GTIN = Сред(КодМаркировки, 4, 13);

        Если ЭтоУпрощенныйGTIN(GTIN) Тогда

            GTIN = РеальныйGTINПоКодуМаркировки(КодМаркировки);

        КонецЕсли;
    
        // 3. Получение процента уценки
        ПроцентУценки = ПроцентУценкиПоКодуМаркировки(КодМаркировки);

        // 4. Поиск задания на отбор
        Запрос = Новый Запрос("ВЫБРАТЬ
                              |    ЗаданияНаОтбор.НомерСтроки КАК НомерСтроки
                              |ИЗ
                              |    (ВЫБРАТЬ
                              |        ЗаданиеНаОтбор.Модель КАК Модель,
                              |        ЗаданиеНаОтбор.Размер КАК Размер,
                              |        ЗаданиеНаОтбор.Модификатор КАК Модификатор,
                              |        ЗаданиеНаОтбор.Цвет КАК Цвет,
                              |        ЗаданиеНаОтбор.НомерСтроки КАК НомерСтроки
                              |    ИЗ
                              |        Документ.Задание.ЗаданиеНаОтбор КАК ЗаданиеНаОтбор
                              |    ГДЕ
                              |        ЗаданиеНаОтбор.Ссылка = &ДокументЗадание
                              |        И ЗаданиеНаОтбор.Комплектовщик = &Комплектовщик
                              |        И ЗаданиеНаОтбор.Уценка = &ПроцентУценки
                              |        И ЗаданиеНаОтбор.Размер <> ЗНАЧЕНИЕ(Справочник.моделиРазмер.ПустаяСсылка)
                              |        И ЗаданиеНаОтбор.Количество > 0) КАК ЗаданияНаОтбор
                              |        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.моделиEAH13 КАК моделиEAH13
                              |        ПО (ЗаданияНаОтбор.Модель = моделиEAH13.Владелец)
                              |        И (ЗаданияНаОтбор.Размер = моделиEAH13.Размер)
                              |        И (ЗаданияНаОтбор.Модификатор = моделиEAH13.Кожтовар)
                              |        И (ЗаданияНаОтбор.Цвет = моделиEAH13.Цвет)
                              |ГДЕ
                              |    моделиEAH13.Код = &GTIN");

        Запрос.УстановитьПараметр("ДокументЗадание", Задание);
        Запрос.УстановитьПараметр("Комплектовщик", Комплектовщик);
        Запрос.УстановитьПараметр("ПроцентУценки", ПроцентУценки);
        Запрос.УстановитьПараметр("GTIN", GTIN);

        РезультатЗапроса = Запрос.Выполнить();
        Выборка = РезультатЗапроса.Выбрать();
    
        // 5. Проверка, что удалось найти задание на отбор
        Если Выборка.Следующий() Тогда
            
            //@skip-check property-return-type
            НомерЗаданияНаОтбор = Выборка.НомерСтроки; // Число
            ОписаниеОбработкиШтрихкода.НомерЗаданияНаОтбор = НомерЗаданияНаОтбор;

            ЗаданиеОбъект = Задание.ПолучитьОбъект();
            
            //@skip-check reading-attribute-from-database
            ЗаданиеНаОтбор = ЗаданиеОбъект.ЗаданиеНаОтбор[НомерЗаданияНаОтбор - 1];

            ПредыдущееКоличество = ЗаданиеНаОтбор.Количество;
            ОписаниеОбработкиШтрихкода.ПредыдущееКоличество = ПредыдущееКоличество;

            // 5.1. Уменьшение количества у задания на отбор
            ЗаданиеНаОтбор.Количество = ПредыдущееКоличество - 1;

            ЗаданиеОбъект.Записать();

            ОписаниеОбработкиШтрихкода.НовоеКоличество = ЗаданиеНаОтбор.Количество;

        Иначе

            ОписаниеОбработкиШтрихкода.КодВозврата = КодВозвратаНеНайденоЗаданиеНаОтборПоШтрихкоду();

        КонецЕсли;

        // 6. Возврат результата
        ЗафиксироватьТранзакцию();

        Возврат ОписаниеОбработкиШтрихкода;

    Исключение

        ОтменитьТранзакцию();
        ВызватьИсключение;

    КонецПопытки;

КонецФункции

// Функция уменьшает значение реквизита "Количество" в табличной части "ЗаданиеНаОтбор"
// на определнное число, которое зависит от модели, с которой связан штрихкод,
// записывает штрихкод в документ "ВнПеремОтпуск" и возвращает описание обработки.
// 
// Параметры:
//  Задание - ДокументСсылка.Задание
//  Комплектовщик - СправочникСсылка.Комплектовщики - Комплектовщик, выполняющий задание
//  Штрихкод - Строка
//
// Возвращаемое значение:
//  См. НовоеОписаниеОбработкиШтрихкода
Функция ОбработатьШтрихкодКороба(Знач Задание, Знач Комплектовщик, Знач Штрихкод) Экспорт

    НачатьТранзакцию();

    Попытка

        ОписаниеОбработкиШтрихкода = НовоеОписаниеОбработкиШтрихкода();
        
        // 1. Извлечение номера короба из штрихкода
        НомерКороба = Штрихкод;

        // 2. Поиск задания на отбор
        Запрос = Новый Запрос;
        Запрос.Текст = "ВЫБРАТЬ
                       |    ЗаданияНаОтбор.НомерСтроки КАК НомерСтроки,
                       |    ТШККороб.Модель.КолВКоробе * (1 + ТШККороб.Модель.флДваКороба) КАК ВычестьКоличество
                       |ИЗ
                       |    (ВЫБРАТЬ
                       |        ЗаданиеНаОтбор.Модель КАК Модель,
                       |        ЗаданиеНаОтбор.Модификатор КАК Модификатор,
                       |        ЗаданиеНаОтбор.Цвет КАК Цвет,
                       |        ЗаданиеНаОтбор.НомерСтроки КАК НомерСтроки
                       |    ИЗ
                       |        Документ.Задание.ЗаданиеНаОтбор КАК ЗаданиеНаОтбор
                       |    ГДЕ
                       |        ЗаданиеНаОтбор.Ссылка = &ДокументЗадание
                       |        И ЗаданиеНаОтбор.Комплектовщик = &Комплектовщик
                       |        И ЗаданиеНаОтбор.Размер = ЗНАЧЕНИЕ(Справочник.моделиРазмер.ПустаяСсылка)
                       |        И ЗаданиеНаОтбор.Количество > 0) КАК ЗаданияНаОтбор
                       |        ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТШККороб КАК ТШККороб
                       |        ПО (ЗаданияНаОтбор.Модель = ТШККороб.Модель)
                       |        И (ЗаданияНаОтбор.Модификатор = ТШККороб.Кожтовар)
                       |        И (ЗаданияНаОтбор.Цвет = ТШККороб.Цвет)
                       |ГДЕ
                       |    ТШККороб.Код = &НомерКороба";

        Запрос.УстановитьПараметр("ДокументЗадание", Задание);
        Запрос.УстановитьПараметр("Комплектовщик", Комплектовщик);
        Запрос.УстановитьПараметр("НомерКороба", НомерКороба);

        РезультатЗапроса = Запрос.Выполнить();
        Выборка = РезультатЗапроса.Выбрать();

        // 3. Проверка, что удалось найти задание на отбор
        Если Выборка.Следующий() Тогда
            
            //@skip-check property-return-type
            НомерЗаданияНаОтбор = Выборка.НомерСтроки; // Число
            ОписаниеОбработкиШтрихкода.НомерЗаданияНаОтбор = НомерЗаданияНаОтбор;
            
            //@skip-check property-return-type
            ВычестьКоличество = Выборка.ВычестьКоличество; // Число    

            ЗаданиеОбъект = Задание.ПолучитьОбъект();
            
            //@skip-check reading-attribute-from-database
            ЗаданиеНаОтбор = ЗаданиеОбъект.ЗаданиеНаОтбор[НомерЗаданияНаОтбор - 1];

            ПредыдущееКоличество = ЗаданиеНаОтбор.Количество;
            ОписаниеОбработкиШтрихкода.ПредыдущееКоличество = ПредыдущееКоличество;
            
            // 3.1. Проверка на то, что после уменьшения количества оно не станет отрицательным
            Если ВычестьКоличество <= ПредыдущееКоличество Тогда
                
                // 3.1.1. Уменьшение количества у задания на отбор
                ЗаданиеНаОтбор.Количество = ПредыдущееКоличество - ВычестьКоличество;

                ЗаданиеОбъект.Записать();

                ОписаниеОбработкиШтрихкода.НовоеКоличество = ЗаданиеНаОтбор.Количество;

            Иначе

                // Добавить в описание информацию о том, какое количество получилось бы после уменьшения
                ОписаниеОбработкиШтрихкода.НовоеКоличество = ПредыдущееКоличество - ВычестьКоличество;
                
                ОписаниеОбработкиШтрихкода.КодВозврата = КодВозвратаСлишкомМногоВКоробе();

            КонецЕсли;

        Иначе

            ОписаниеОбработкиШтрихкода.КодВозврата = КодВозвратаНеНайденоЗаданиеНаОтборПоШтрихкоду();

        КонецЕсли;
        
        // 4. Возврат результата
        ЗафиксироватьТранзакцию();

        Возврат ОписаниеОбработкиШтрихкода;

    Исключение

        ОтменитьТранзакцию();
        ВызватьИсключение;

    КонецПопытки;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция проверяет, что GTIN является упрощенным.
// 
// Параметры:
//  GTIN - Строка
// 
// Возвращаемое значение:
//  Булево
Функция ЭтоУпрощенныйGTIN(GTIN)

    Возврат GTIN = "4814130000030";

КонецФункции

// Функция возвращает реальный GTIN, соответствующий коду маркировки с упрощенным GTIN.
// 
// Параметры:
//  КодМаркировкиСУспрощеннымGTIN - Строка
// 
// Возвращаемое значение:
//  Строка - Реальный GTIN или пустая строка
Функция РеальныйGTINПоКодуМаркировки(КодМаркировкиСУспрощеннымGTIN)

    Запрос = Новый Запрос("ВЫБРАТЬ
                          |    СрезБазыМаркировкаТШК.GTIN КАК GTIN
                          |ИЗ
                          |    Справочник.СрезБазыМаркировкаТШК КАК СрезБазыМаркировкаТШК
                          |ГДЕ
                          |    СрезБазыМаркировкаТШК.КМ31 = &КМ31");

    Запрос.УстановитьПараметр("КМ31", КодМаркировкиСУспрощеннымGTIN);

    РезультатЗапроса = Запрос.Выполнить();
    Выборка = РезультатЗапроса.Выбрать();

    Если Выборка.Следующий() Тогда
        
        //@skip-check property-return-type
        Возврат Выборка.GTIN;

    Иначе

        // Возрат значения по умолчанию
        Возврат "";

    КонецЕсли;

КонецФункции

// Функция возвращает процент уценки, соответствующий коду маркировки.
// 
// Параметры:
//  КодМаркировки - Строка
// 
// Возвращаемое значение:
//  Число
Функция ПроцентУценкиПоКодуМаркировки(КодМаркировки)

    Запрос = Новый Запрос("ВЫБРАТЬ
                          |    СрезБазыМаркировкаТШК.ПроцентУценки КАК ПроцентУценки
                          |ИЗ
                          |    Справочник.СрезБазыМаркировкаТШК КАК СрезБазыМаркировкаТШК
                          |ГДЕ
                          |    СрезБазыМаркировкаТШК.КМ31 = &КМ31");

    Запрос.УстановитьПараметр("КМ31", КодМаркировки);

    РезультатЗапроса = Запрос.Выполнить();
    Выборка = РезультатЗапроса.Выбрать();

    Если Выборка.Следующий() Тогда
        
        //@skip-check property-return-type
        Возврат Выборка.ПроцентУценки;

    Иначе

        // Возрат значения по умолчанию
        Возврат 0;

    КонецЕсли;

КонецФункции

// Функция создает описание обработки штрихкода.
// 
// Возвращаемое значение:
//  Структура - Описание обработки штрихкода:
// * КодВозврата - Число - Код, указывающий на результат обработки штрихкода
// * НомерЗаданияНаОтбор - Неопределено, Число - Номер строки табличной части "ЗаданиеНаОтбор" документа "Задание",
//                                               которой соответствовал обрабатываемый штрихкод
// * ПредыдущееКоличество - Неопределено, Число - Значение реквизита "Количество" до обработки штрихкода
// * НовоеКоличество - Неопределено, Число - Значение реквизита "Количество" после обработки штрихкода
Функция НовоеОписаниеОбработкиШтрихкода() Экспорт

    ОписаниеОбработкиШтрихкода = Новый Структура;

    ОписаниеОбработкиШтрихкода.Вставить("КодВозврата", КодВозвратаУспех());
    ОписаниеОбработкиШтрихкода.Вставить("НомерЗаданияНаОтбор", Неопределено);
    ОписаниеОбработкиШтрихкода.Вставить("ПредыдущееКоличество", Неопределено);
    ОписаниеОбработкиШтрихкода.Вставить("НовоеКоличество", Неопределено);

    Возврат ОписаниеОбработкиШтрихкода;

КонецФункции

#КонецОбласти