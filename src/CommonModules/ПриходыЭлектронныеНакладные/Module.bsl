// @strict-types
#Область ПрограммныйИнтерфейс

// Функция определяет содержит ли акт приемки товаров данный код маркировки, был ли
// он уже обработан, и увеличивает счетчик с количеством принятого товара.
// 
// Параметры:
//  АктПриемкиТоваров - ДокументСсылка.АктПриемкиТоваров
//  КодМаркировки - Строка
// 
// Возвращаемое значение:
//  См. НовоеОписаниеОбработкиШтрихкода
Функция ОбработатьКодМаркировки(Знач АктПриемкиТоваров, Знач КодМаркировки) Экспорт

    Перем НомерНоменклатуры; // Неопределено, Число
    Перем НомерКодаМаркировки; // Неопределено, Число
    Перем КодМаркировкиУжеПроверен; // Неопределено, Булево

    НачатьТранзакцию();

    Попытка

        ОписаниеОбработкиШтрихкода = НовоеОписаниеОбработкиШтрихкода();
        
        // 1. Получение кодов маркировки и номенклатуры для документа
        Запрос = Новый Запрос("ВЫБРАТЬ
                              |	ВсеКодыМаркировки.НомерСтроки КАК НомерСтроки,
                              |	ВсеКодыМаркировки.КлючСвязи КАК КлючСвязи,
                              |	ВсеКодыМаркировки.КодМаркировки КАК КодМаркировки,
                              |	ВсеКодыМаркировки.Проверен КАК Проверен
                              |ПОМЕСТИТЬ КодыМаркировкиДокумента
                              |ИЗ
                              |	Документ.АктПриемкиТоваров.КодыМаркировки КАК ВсеКодыМаркировки
                              |ГДЕ
                              |	ВсеКодыМаркировки.Ссылка = &Документ
                              |
                              |ИНДЕКСИРОВАТЬ ПО
                              |	КлючСвязи
                              |;
                              |
                              |////////////////////////////////////////////////////////////////////////////////
                              |ВЫБРАТЬ
                              |	ВсяНоменклатура.НомерСтроки КАК НомерСтроки,
                              |	ВсяНоменклатура.КлючСвязи КАК КлючСвязи
                              |ПОМЕСТИТЬ НоменклатураДокумента
                              |ИЗ
                              |	Документ.АктПриемкиТоваров.Номенклатура КАК ВсяНоменклатура
                              |ГДЕ
                              |	ВсяНоменклатура.Ссылка = &Документ
                              |
                              |ИНДЕКСИРОВАТЬ ПО
                              |	КлючСвязи
                              |;
                              |
                              |////////////////////////////////////////////////////////////////////////////////
                              |ВЫБРАТЬ
                              |	КодыМаркировкиДокумента.НомерСтроки КАК НомерКодаМаркировки,
                              |	КодыМаркировкиДокумента.КодМаркировки КАК КодМаркировки,
                              |	КодыМаркировкиДокумента.Проверен КАК Проверен,
                              |	НоменклатураДокумента.НомерСтроки КАК НомерНоменклатуры
                              |ИЗ
                              |	КодыМаркировкиДокумента КАК КодыМаркировкиДокумента
                              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НоменклатураДокумента КАК НоменклатураДокумента
                              |		ПО КодыМаркировкиДокумента.КлючСвязи = НоменклатураДокумента.КлючСвязи");

        Запрос.УстановитьПараметр("Документ", АктПриемкиТоваров);
        РезультатЗапроса = Запрос.Выполнить();
        Выборка = РезультатЗапроса.Выбрать();

        // 2. Поиск кода маркировки в документе
        Пока Выборка.Следующий() Цикл

            //@skip-check property-return-type
            КодМаркировкиДокумента = Выборка.КодМаркировки; // ХранилищеЗначения

            Если Строка(КодМаркировкиДокумента.Получить()) = КодМаркировки Тогда
                                
                //@skip-check property-return-type
                НомерНоменклатуры = Выборка.НомерНоменклатуры; // Число
                
                //@skip-check property-return-type
                НомерКодаМаркировки = Выборка.НомерКодаМаркировки; // Число
                
                //@skip-check property-return-type
                КодМаркировкиУжеПроверен = Выборка.Проверен;

                Прервать;

            КонецЕсли;

        КонецЦикла;
        
        // 3. Проверка, что код маркировки был найден в документе
        Если Не ЗначениеЗаполнено(НомерКодаМаркировки) Или Не ЗначениеЗаполнено(НомерНоменклатуры) Тогда

            ОтменитьТранзакцию();

            ОписаниеОбработкиШтрихкода.КодВозврата = КодВозвратаНеНайденКодМаркировки();

            Возврат ОписаниеОбработкиШтрихкода;

        КонецЕсли;
        
        // 4. Проверка, что код маркировки еще не обрабатывался
        Если КодМаркировкиУжеПроверен Тогда

            ОтменитьТранзакцию();

            ОписаниеОбработкиШтрихкода.КодВозврата = КодВозвратаКодМаркировкиУжеПроверен();

            Возврат ОписаниеОбработкиШтрихкода;

        КонецЕсли;
        
        // 5. Увеличение счетчика количества принятого товара для найденной номенклатуры
        ОбъектДокумента = АктПриемкиТоваров.ПолучитьОбъект();

        ОписаниеОбработкиШтрихкода.НомерНоменклатуры = НомерНоменклатуры;

        Номенклатура = ОбъектДокумента.Номенклатура.Получить(НомерНоменклатуры - 1);
        ОписаниеОбработкиШтрихкода.ПредыдущееКоличество = Номенклатура.КоличествоПринятогоТовара;

        Номенклатура.КоличествоПринятогоТовара = Номенклатура.КоличествоПринятогоТовара + 1;
        ОписаниеОбработкиШтрихкода.НовоеКоличество = Номенклатура.КоличествоПринятогоТовара;

        ЗаписьКодаМаркировки = ОбъектДокумента.КодыМаркировки.Получить(НомерКодаМаркировки - 1);
        ЗаписьКодаМаркировки.Проверен = Истина;

        ОбъектДокумента.Записать();

        ОписаниеОбработкиШтрихкода.КодВозврата = КодВозвратаТоварНайден();

        ЗафиксироватьТранзакцию();

        Возврат ОписаниеОбработкиШтрихкода;

    Исключение

        ОтменитьТранзакцию();
        ВызватьИсключение;

    КонецПопытки;

КонецФункции


// Функция определяет содержит ли акт приемки товаров номенклатуру с данным кодом
// и увеличивает счетчик с количеством принятого товара.
// 
// Параметры:
//  АктПриемкиТоваров - ДокументСсылка.АктПриемкиТоваров
//  GTIN - Строка
// 
// Возвращаемое значение:
//  См. НовоеОписаниеОбработкиШтрихкода
Функция ОбработатьGTIN(Знач АктПриемкиТоваров, Знач GTIN) Экспорт

    НачатьТранзакцию();

    Попытка

        ОписаниеОбработкиШтрихкода = НовоеОписаниеОбработкиШтрихкода();
        
        // 1. Поиск номенклатуры в документе по GTIN 
        Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
                              |    АктПриемкиТоваровНоменклатура.НомерСтроки КАК НомерНоменклатуры
                              |ИЗ
                              |    Документ.АктПриемкиТоваров.Номенклатура КАК АктПриемкиТоваровНоменклатура
                              |ГДЕ
                              |    АктПриемкиТоваровНоменклатура.Ссылка = &Документ
                              |    И АктПриемкиТоваровНоменклатура.Номенклатура.Код = &GTIN");

        Запрос.УстановитьПараметр("Документ", АктПриемкиТоваров);
        Запрос.УстановитьПараметр("GTIN", GTIN);
        РезультатЗапроса = Запрос.Выполнить();
        Выборка = РезультатЗапроса.Выбрать();

        Если Не Выборка.Следующий() Тогда

            ОтменитьТранзакцию();

            ОписаниеОбработкиШтрихкода.КодВозврата = КодВозвратаНеНайденаНоменклатура();

            Возврат ОписаниеОбработкиШтрихкода;

        КонецЕсли;
        
        // 2. Увеличение счетчика количества принятого товара для найденной номенклатуры
        ОбъектДокумента = АктПриемкиТоваров.ПолучитьОбъект();

        //@skip-check property-return-type
        НомерНоменклатуры = Выборка.НомерНоменклатуры; // Число
        ОписаниеОбработкиШтрихкода.НомерНоменклатуры = НомерНоменклатуры;

        Номенклатура = ОбъектДокумента.Номенклатура.Получить(НомерНоменклатуры - 1);
        ОписаниеОбработкиШтрихкода.ПредыдущееКоличество = Номенклатура.КоличествоПринятогоТовара;

        Номенклатура.КоличествоПринятогоТовара = Номенклатура.КоличествоПринятогоТовара + 1;
        ОписаниеОбработкиШтрихкода.НовоеКоличество = Номенклатура.КоличествоПринятогоТовара;

        ОбъектДокумента.Записать();

        ОписаниеОбработкиШтрихкода.КодВозврата = КодВозвратаТоварНайден();

        ЗафиксироватьТранзакцию();

        Возврат ОписаниеОбработкиШтрихкода;

    Исключение

        ОтменитьТранзакцию();
        ВызватьИсключение;

    КонецПопытки;

КонецФункции

// Функция возвращает суммарное количество товара, которое осталось проверить в документе.
// 
// Параметры:
//  АктПриемкиТоваров - ДокументСсылка.АктПриемкиТоваров
// 
// Возвращаемое значение:
//  Число
Функция ОсталосьПроверить(Знач АктПриемкиТоваров) Экспорт

    Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
                          |	СУММА(АктПриемкиТоваровНоменклатура.КоличествоПоставленногоТовара - АктПриемкиТоваровНоменклатура.КоличествоПринятогоТовара) КАК Остаток
                          |ИЗ
                          |	Документ.АктПриемкиТоваров.Номенклатура КАК АктПриемкиТоваровНоменклатура
                          |ГДЕ
                          |	АктПриемкиТоваровНоменклатура.Ссылка = &Документ
                          |	И АктПриемкиТоваровНоменклатура.КоличествоПринятогоТовара < АктПриемкиТоваровНоменклатура.КоличествоПоставленногоТовара
                          |
                          |СГРУППИРОВАТЬ ПО
                          |	АктПриемкиТоваровНоменклатура.Ссылка");

    Запрос.УстановитьПараметр("Документ", АктПриемкиТоваров);

    РезультатЗапроса = Запрос.Выполнить();
    Выборка = РезультатЗапроса.Выбрать();

    Остаток = 0;

    Если Выборка.Следующий() Тогда 
		
        //@skip-check property-return-type
        Остаток = Выборка.Остаток; // Число 

    КонецЕсли;

    Возврат Остаток;

КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Функция создает описание обработки штрихкода.
// 
// Возвращаемое значение:
//  Структура - Описание обработки штрихкода:
// * КодВозврата - Число - Код, указывающий на результат обработки штрихкода
// * НомерНоменклатуры - Неопределено, Число - Номер строки табличной части "Номенклатура" документа "АктПриемкиТоваров",
//                                             которой соответствовал обрабатываемый штрихкод
// * ПредыдущееКоличество - Неопределено, Число - Значение реквизита "КоличествоПринятогоТовара" до обработки штрихкода
// * НовоеКоличество - Неопределено, Число - Значение реквизита "КоличествоПринятогоТовара" после обработки штрихкода
Функция НовоеОписаниеОбработкиШтрихкода() Экспорт

    ОписаниеОбработкиШтрихкода = Новый Структура;

    ОписаниеОбработкиШтрихкода.Вставить("КодВозврата", КодВозвратаУспех());
    ОписаниеОбработкиШтрихкода.Вставить("НомерНоменклатуры", Неопределено);
    ОписаниеОбработкиШтрихкода.Вставить("ПредыдущееКоличество", Неопределено);
    ОписаниеОбработкиШтрихкода.Вставить("НовоеКоличество", Неопределено);

    Возврат ОписаниеОбработкиШтрихкода;

КонецФункции

#КонецОбласти