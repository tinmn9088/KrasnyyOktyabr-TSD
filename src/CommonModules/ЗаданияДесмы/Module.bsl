// @strict-types
#Область ПрограммныйИнтерфейс

// Функция определяет количество штрихкодов, обработанных данным комплектовщиком.
// 
// Параметры:
//  Комплектовщик - СправочникСсылка.Комплектовщики
//  Процесс - ПеречислениеСсылка.ПроцессНаДесме
// 
// Возвращаемое значение:
//  Число
Функция КоличествоШтрихкодовКомплектовщика(Знач Комплектовщик, Знач Процесс) Экспорт

    Запрос = Новый Запрос("ВЫБРАТЬ
                          |    КОЛИЧЕСТВО(*) КАК Количество
                          |ИЗ
                          |    РегистрСведений.ШтрихкодыДесмы КАК ШтрихкодыДесмы
                          |ГДЕ
                          |    ШтрихкодыДесмы.Комплектовщик = &Комплектовщик
                          |    И ШтрихкодыДесмы.Процесс = &Процесс
                          |    И НЕ ШтрихкодыДесмы.ОбработанТШК");

    Запрос.УстановитьПараметр("Комплектовщик", Комплектовщик);
    Запрос.УстановитьПараметр("Процесс", Процесс);

    РезультатЗапроса = Запрос.Выполнить();
    Выборка = РезультатЗапроса.Выбрать();

    Если Не Выборка.Следующий() Тогда

        Возврат 0;

    КонецЕсли;
    
    //@skip-check property-return-type
    КоличествоШтрихкодов = Выборка.Количество; // Число

    Возврат КоличествоШтрихкодов;

КонецФункции

// Функция определяет был ли уже отсканирован штрихкод, и если нет,
// то сохраняет его.
// 
// Параметры:
//  Комплектовщик - СправочникСсылка.Комплектовщики
//  Процесс - ПеречислениеСсылка.ПроцессНаДесме
//  Штрихкод - Строка
// 
// Возвращаемое значение:
//  См. НовоеОписаниеОбработкиШтрихкода
Функция ОбработатьШтрихкод(Знач Комплектовщик, Знач Процесс, Знач Штрихкод) Экспорт
    
    // 1. Удаление недопустимых символов из штрихкода, чтобы в базу данных не попала строка, которую нельзя сериализовать
    Штрихкод = XMLКлиентСервер.ЗаменитьНедопустимыеСимволы(Штрихкод);

    НачатьТранзакцию();

    Попытка

        ОписаниеОбработкиШтрихкода = НовоеОписаниеОбработкиШтрихкода();
        
        // 2. Проверка, что штрихкод еще не был обработан
        Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
                              |    ШтрихкодыДесмы.Дата
                              |ИЗ
                              |    РегистрСведений.ШтрихкодыДесмы КАК ШтрихкодыДесмы
                              |ГДЕ
                              |    ШтрихкодыДесмы.Комплектовщик = &Комплектовщик
                              |    И ШтрихкодыДесмы.Процесс = &Процесс
                              |    И ШтрихкодыДесмы.Штрихкод = &Штрихкод
                              |    И НЕ ШтрихкодыДесмы.ОбработанТШК");

        Запрос.УстановитьПараметр("Комплектовщик", Комплектовщик);
        Запрос.УстановитьПараметр("Процесс", Процесс);
        Запрос.УстановитьПараметр("Штрихкод", Штрихкод);

        РезультатЗапроса = Запрос.Выполнить();
        Выборка = РезультатЗапроса.Выбрать();

        Если Выборка.Следующий() Тогда

            ОтменитьТранзакцию();

            //@skip-check property-return-type
            ДатаПредыдущегоСканирования = Выборка.Дата; // Дата

            ОписаниеОбработкиШтрихкода.ДатаПредыдущегоСканирования = ДатаПредыдущегоСканирования;
            ОписаниеОбработкиШтрихкода.КодВозврата = КодВозвратаШтрихкодУжеОтсканирован();

            Возврат ОписаниеОбработкиШтрихкода;

        КонецЕсли;
  
        // 3. Добавление штрихкода в документ и регистр сведений
        РегистрыСведений.ШтрихкодыДесмы.ДобавитьШтрихкод(Комплектовщик, Процесс, Штрихкод, ТекущаяДатаСеанса());

        ОписаниеОбработкиШтрихкода.КодВозврата = КодВозвратаУспех();

        ЗафиксироватьТранзакцию();

        Возврат ОписаниеОбработкиШтрихкода;

    Исключение

        ОтменитьТранзакцию();
        ВызватьИсключение;

    КонецПопытки;

КонецФункции

// См. РегистрСведенийМенеджер.ШтрихкодыДесмы.УдалитьШтрихкод
Процедура УдалитьШтрихкод(Знач Комплектовщик, Знач Процесс, Знач Штрихкод) Экспорт

    РегистрыСведений.ШтрихкодыДесмы.УдалитьШтрихкод(Комплектовщик, Процесс, Штрихкод);

КонецПроцедуры

// См. РегистрСведенийМенеджер.ШтрихкодыДесмы.УдалитьШтрихкодыКомплектовщика
Процедура УдалитьШтрихкодыКомплектовщика(Знач Комплектовщик, Знач Процесс) Экспорт

    РегистрыСведений.ШтрихкодыДесмы.УдалитьШтрихкодыКомплектовщика(Комплектовщик, Процесс);

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Функция создает описание обработки штрихкода.
// 
// Возвращаемое значение:
//  Структура - Описание обработки штрихкода:
// * КодВозврата - Число - Код, указывающий на результат обработки штрихкода
// * ДатаПредыдущегоСканирования - Неопределено, Дата - Дата предыдущего сканирования, если штрихкод уже был отсканирован
Функция НовоеОписаниеОбработкиШтрихкода() Экспорт

    ОписаниеОбработкиШтрихкода = Новый Структура;

    ОписаниеОбработкиШтрихкода.Вставить("КодВозврата", КодВозвратаУспех());
    ОписаниеОбработкиШтрихкода.Вставить("ДатаПредыдущегоСканирования", Неопределено);

    Возврат ОписаниеОбработкиШтрихкода;

КонецФункции

#КонецОбласти