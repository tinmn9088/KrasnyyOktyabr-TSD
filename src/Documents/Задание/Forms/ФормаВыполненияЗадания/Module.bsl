// @strict-types
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

    ФормаЗадание = Параметры.Задание;
    ФормаКомплектовщик = Параметры.Комплектовщик;

    ФормаСписокЗаданийНаОтбор.Параметры.УстановитьЗначениеПараметра("Задание", ФормаЗадание);
    ФормаСписокЗаданийНаОтбор.Параметры.УстановитьЗначениеПараметра("Комплектовщик", ФормаКомплектовщик);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

#Если МобильныйКлиент Или МобильноеПриложениеКлиент Тогда

    // Отключить видимость шапки динамического списка, чтобы сэкономить место на экране 
    Элементы.СписокЗаданийНаОтбор.Шапка = Ложь;

#КонецЕсли

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбработатьШтрихкодСФормы(Команда)

    ОбработатьШтрихкод(ФормаШтрихкод);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция возвращает ключ уникальности оповещений пользователя.
// 
// Возвращаемое значение:
//  Строка - Ключ уникальности оповещений пользователя
&НаКлиенте
Функция КлючУникальностиОповещенийПользователя()

    Возврат ИмяФормы;

КонецФункции

// Процедура определяет тип штрихокда и в зависимости от типа выполняет
// его обработку.
// 
// Параметры:
//  Штрихкод - Строка - Штрихкод
&НаКлиенте
Процедура ОбработатьШтрихкод(Штрихкод)

    Перем ОписаниеОбработкиШтрихкода; // См. КонтрольОтбора.НовоеОписаниеОбработкиШтрихкода

    // 1. Определение типа штрихкода
    Тип = ШтрихкодыКлиентСервер.ТипШтрихкода(Штрихкод);

    // 2.1. Остановить обработку, если не удалось определить тип штрихкода
    Если Тип = Неопределено Тогда

        ОповещенияПользователяКлиент.ПоказатьВажноеОповещениеОшибка("Неверный штрихкод",
                                                                    Штрихкод,
                                                                    КлючУникальностиОповещенийПользователя());
        Возврат;

    // 2.2. Обработка штрихкода типа ТШК
    ИначеЕсли Тип = ПредопределенноеЗначение("Перечисление.ТипШтрихкода.ТШК") Тогда

        ОповещенияПользователяКлиент.ПоказатьОповещение("Обработка ТШК",
                                                        Штрихкод,
                                                        КлючУникальностиОповещенийПользователя());

        ОписаниеОбработкиШтрихкода = ОбработатьШтрихкодКороба(Штрихкод);

    // 2.2. Обработка штрихкода типа КМ31
    ИначеЕсли Тип = ПредопределенноеЗначение("Перечисление.ТипШтрихкода.DataMatrix") Тогда

        ОповещенияПользователяКлиент.ПоказатьОповещение("Обработка КМ31",
                                                        Штрихкод,
                                                        КлючУникальностиОповещенийПользователя());

        ОписаниеОбработкиШтрихкода = ОбработатьШтрихкодРоссыпи(Штрихкод);

    КонецЕсли;

    
    // 3.1. Оповещение об успешной обработке
    Если ЭтоКодВозвратаУспех(ОписаниеОбработкиШтрихкода.КодВозврата) Тогда

        ЗаголовокОповещения = СтрШаблон("Задание на отбор %1 обработано",
                                        ОписаниеОбработкиШтрихкода.НомерЗаданияНаОтбор);
        ПояснениеОповещения = СтрШаблон("Количество %1 → %2",
                                        ОписаниеОбработкиШтрихкода.ПредыдущееКоличество,
                                        ОписаниеОбработкиШтрихкода.НовоеКоличество);

        ОповещенияПользователяКлиент.ПоказатьОповещение(ЗаголовокОповещения,
                                                        ПояснениеОповещения,
                                                        КлючУникальностиОповещенийПользователя());

    КонецЕсли;

КонецПроцедуры

// Обработать штрихкод короба.
// 
// Параметры:
//  Штрихкод - Строка - Штрихкод
// 
// Возвращаемое значение:
//  См. КонтрольОтбора.НовоеОписаниеОбработкиШтрихкода
&НаСервере
Функция ОбработатьШтрихкодКороба(Знач Штрихкод)

    Возврат КонтрольОтбора.ОбработатьШтрихкодКороба(ФормаЗадание, ФормаКомплектовщик, Штрихкод);

КонецФункции

// Обработать штрихкод россыпи.
// 
// Параметры:
//  Штрихкод - Строка - Штрихкод
// 
// Возвращаемое значение:
//  См. КонтрольОтбора.НовоеОписаниеОбработкиШтрихкода
&НаСервере
Функция ОбработатьШтрихкодРоссыпи(Знач Штрихкод)

    Возврат КонтрольОтбора.ОбработатьШтрихкодРоссыпи(ФормаЗадание, ФормаКомплектовщик, Штрихкод);

КонецФункции

#КонецОбласти