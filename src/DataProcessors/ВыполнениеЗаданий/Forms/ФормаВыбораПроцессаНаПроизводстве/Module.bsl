// @strict-types
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

    ФормаСотрудник = Параметры.Сотрудник;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

    Если Не ТекущийПользовательИмеетПравоВыполнятьПечатьЯрлыков() Тогда

        СделатьКнопкуНедоступной(Элементы.КнопкаВыбратьПечатьЯрлыков);

    КонецЕсли;

    Если Не ТекущийПользовательИмеетПравоВыполнятьПечатьЭтикеток() Тогда

        СделатьКнопкуНедоступной(Элементы.КнопкаВыбратьПечатьЭтикеток);

    КонецЕсли;

    Если Не ТекущийПользовательИмеетПравоВыполнятьФормированиеТележки() Тогда

        СделатьКнопкуНедоступной(Элементы.КнопкаВыбратьФормированиеТележки);

    КонецЕсли;

    Если Не ТекущийПользовательИмеетПравоВыполнятьКонтроль() Тогда

        СделатьКнопкуНедоступной(Элементы.КнопкаВыбратьКонтроль);

    КонецЕсли;

    Если Не ТекущийПользовательИмеетПравоВыполнятьРегистрацияОпераций() Тогда

        СделатьКнопкуНедоступной(Элементы.КнопкаВыбратьРегистрацияОпераций);

    КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьПроцессПечатьЯрлыков(Команда)

#Если Не МобильныйКлиент И Не МобильноеПриложениеКлиент Тогда

    Закрыть();

#КонецЕсли

    ОткрытьФормуВыполнения(ПредопределенноеЗначение("Перечисление.ПроцессНаПроизводстве.ПечатьЯрлыков"));

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПроцессПечатьЭтикеток(Команда)

#Если Не МобильныйКлиент И Не МобильноеПриложениеКлиент Тогда

    Закрыть();

#КонецЕсли

    ОткрытьФормуВыполнения(ПредопределенноеЗначение("Перечисление.ПроцессНаПроизводстве.ПечатьЭтикеток"));

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПроцессФормированиеТележки(Команда)

#Если Не МобильныйКлиент И Не МобильноеПриложениеКлиент Тогда

    Закрыть();

#КонецЕсли

    ОткрытьФормуВыполнения(ПредопределенноеЗначение("Перечисление.ПроцессНаПроизводстве.ФормированиеТележки"));

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПроцессКонтроль(Команда)

#Если Не МобильныйКлиент И Не МобильноеПриложениеКлиент Тогда

    Закрыть();

#КонецЕсли

    ОткрытьФормуВыполнения(ПредопределенноеЗначение("Перечисление.ПроцессНаПроизводстве.Контроль"));

КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПроцессРегистрацияОпераций(Команда)

    ОповещенияПользователяКлиент.ПоказатьОповещение("Выбран процесс", "Регистрация операций", ИмяФормы);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ТекущийПользовательИмеетПравоВыполнятьПечатьЯрлыков()

    Возврат Истина;

КонецФункции

&НаСервере
Функция ТекущийПользовательИмеетПравоВыполнятьПечатьЭтикеток()

    Возврат Истина;

КонецФункции

&НаСервере
Функция ТекущийПользовательИмеетПравоВыполнятьФормированиеТележки()

    Возврат Истина;

КонецФункции

&НаСервере
Функция ТекущийПользовательИмеетПравоВыполнятьКонтроль()

    Возврат Истина;

КонецФункции

&НаСервере
Функция ТекущийПользовательИмеетПравоВыполнятьРегистрацияОпераций()

    Возврат Ложь;

КонецФункции

// Процедура добавляет астериск в начале заголовка и отключает доступность кнопки.
// 
// Параметры:
//  Кнопка - КнопкаФормы
&НаКлиенте
Процедура СделатьКнопкуНедоступной(Кнопка)

    Кнопка.Заголовок = "* " + Кнопка.Заголовок;
    Кнопка.Доступность = Ложь;

КонецПроцедуры

// Открыть форму выполнения.
// 
// Параметры:
//  Процесс - ПеречислениеСсылка.ПроцессНаПроизводстве
&НаКлиенте
Процедура ОткрытьФормуВыполнения(Процесс)

    ПараметрыФормы = Новый Структура("Сотрудник, Процесс", ФормаСотрудник, Процесс);
    ОткрытьФорму("Обработка.ВыполнениеЗаданийНаПроизводстве.Форма.ФормаВыполнения", ПараметрыФормы);

КонецПроцедуры

#КонецОбласти