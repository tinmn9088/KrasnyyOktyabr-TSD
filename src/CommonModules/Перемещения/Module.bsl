#Область ПрограммныйИнтерфейс

// Функция определяет содержит ли акт приемки товаров номенклатуру с данным кодом
// и увеличивает счетчик с количеством принятого товара.
// 
// Параметры:
//  АктПриемкиТоваров - ДокументСсылка.АктПриемкиТоваров
//  GTIN - Строка
// 
// Возвращаемое значение:
//  См. НовоеОписаниеОбработкиШтрихкода
Функция ОбработатьGTIN(Знач АктПриемкиТоваров, Знач GTIN) Экспорт

    НачатьТранзакцию();

    Попытка

        ОписаниеОбработкиШтрихкода = НовоеОписаниеОбработкиШтрихкода();
        
        // 1. Поиск номенклатуры в документе по GTIN 
        Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
                              |    АктПриемкиТоваровНоменклатура.НомерСтроки КАК НомерНоменклатуры
                              |ИЗ
                              |    Документ.АктПриемкиТоваров.Номенклатура КАК АктПриемкиТоваровНоменклатура
                              |ГДЕ
                              |    АктПриемкиТоваровНоменклатура.Ссылка = &Документ
                              |    И АктПриемкиТоваровНоменклатура.Номенклатура.Код = &GTIN");

        Запрос.УстановитьПараметр("Документ", АктПриемкиТоваров);
        Запрос.УстановитьПараметр("GTIN", GTIN);
        РезультатЗапроса = Запрос.Выполнить();
        Выборка = РезультатЗапроса.Выбрать();

        Если Не Выборка.Следующий() Тогда

            ОтменитьТранзакцию();

            ОписаниеОбработкиШтрихкода.КодВозврата = КодВозвратаНеНайденаНоменклатура();

            Возврат ОписаниеОбработкиШтрихкода;

        КонецЕсли;
        
        // 2. Увеличение счетчика количества принятого товара для найденной номенклатуры
        ОбъектДокумента = АктПриемкиТоваров.ПолучитьОбъект();

        //@skip-check property-return-type
        НомерНоменклатуры = Выборка.НомерНоменклатуры; // Число
        ОписаниеОбработкиШтрихкода.НомерНоменклатуры = НомерНоменклатуры;

        Номенклатура = ОбъектДокумента.Номенклатура.Получить(НомерНоменклатуры - 1);
        ОписаниеОбработкиШтрихкода.ПредыдущееКоличество = Номенклатура.КоличествоПринятогоТовара;

        Номенклатура.КоличествоПринятогоТовара = Номенклатура.КоличествоПринятогоТовара + 1;
        ОписаниеОбработкиШтрихкода.НовоеКоличество = Номенклатура.КоличествоПринятогоТовара;

        ОбъектДокумента.Записать();

        ОписаниеОбработкиШтрихкода.КодВозврата = КодВозвратаУспех();

        ЗафиксироватьТранзакцию();

        Возврат ОписаниеОбработкиШтрихкода;

    Исключение

        ОтменитьТранзакцию();
        ВызватьИсключение;

    КонецПопытки;

КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Функция создает описание обработки штрихкода.
// 
// Возвращаемое значение:
//  Структура - Описание обработки штрихкода:
// * КодВозврата - Число - Код, указывающий на результат обработки штрихкода
// * НомерТовара - Неопределено, Число - Номер строки табличной части "Товары" документа "ПеремещениеТоваров",
//                                       которой соответствовал обрабатываемый штрихкод
// * ПредыдущееКоличество - Неопределено, Число - Значение реквизита "Количество" до обработки штрихкода
// * НовоеКоличество - Неопределено, Число - Значение реквизита "Количество" после обработки штрихкода
Функция НовоеОписаниеОбработкиШтрихкода() Экспорт

    ОписаниеОбработкиШтрихкода = Новый Структура;

    ОписаниеОбработкиШтрихкода.Вставить("КодВозврата", КодВозвратаУспех());
    ОписаниеОбработкиШтрихкода.Вставить("НомерТовара", Неопределено);
    ОписаниеОбработкиШтрихкода.Вставить("ПредыдущееКоличество", Неопределено);
    ОписаниеОбработкиШтрихкода.Вставить("НовоеКоличество", Неопределено);

    Возврат ОписаниеОбработкиШтрихкода;

КонецФункции

#КонецОбласти