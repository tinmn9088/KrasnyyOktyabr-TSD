// @strict-types
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    
    // Отобразить подсказку про возможность отсканировать штрихкод с табельным
    // номером, если на клиенте настроено сканирование штрихкодов
    Элементы.ПодсказкаОтсканируйтеШтрихкод.Видимость = МенеджерВнешниеКомпонентыКлиент.НастроеноСканированиеШтрихкодов();

КонецПроцедуры

// Обработка сканирования штрихкода.
// 
// Параметры:
//  ИмяСобытия - Строка - Имя события
//  Параметр - Произвольный - Параметр
//  Источник - Произвольный - Источник
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

    Если ВводДоступен() И ИмяСобытия = ОповещенияФормыКлиент.ИмяСобытияСканированияШтрихкода() Тогда

        // 1. Получение табельного номера из отсканированного штрихкода
        Штрихкод = Строка(Параметр);    
	  
        // 2.1. Проверка длины штрихкода
        Если СтрДлина(Штрихкод) > 5 Тогда

            ОповещенияПользователяКлиент.ПоказатьОповещение("Неверный штрихкод",
                                                            "Длиннее 5 символов",
                                                            КлючУникальностиОповещенийПользователя());
            Возврат;

        КонецЕсли;

        // 2.2 Проверка, что штрихкод это число
        Попытка

            ТабельныйНомер = Число(Штрихкод);

        Исключение

            ОповещенияПользователяКлиент.ПоказатьОповещение("Неверный штрихкод",
                                                            "Содержит недопустимые символы",
                                                            КлючУникальностиОповещенийПользователя());
            Возврат;

        КонецПопытки;
        
        // 3. Заполнение поля ввода табельного номера
        ФормаТабельныйНомер = ТабельныйНомер;
        ОбновитьОтображениеДанных(Элементы.ТабельныйНомер);
        ОбновитьДоступностьКнопкиДляВхода();
        
        // 4. Открытие выбора задания для комплектовщика
        ОповещенияПользователяКлиент.ПоказатьОповещение("Табельный номер отсканирован",
                                                        Штрихкод,
                                                        КлючУникальностиОповещенийПользователя());
        ОткрытьВыборЗадания(ТабельныйНомер);

    КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ФормаТабельныйНомерПриИзменении(Элемент)

    ОбновитьДоступностьКнопкиДляВхода();

КонецПроцедуры

&НаКлиенте
Процедура ФормаТабельныйНомерИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)

    ОбновитьДоступностьКнопкиДляВхода();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Открыть выбор задания для комплектовщика с табельным номером из поля ввода.
// 
// Параметры:
//  Команда - КомандаФормы - Команда
&НаКлиенте
Процедура ОткрытьВыборЗаданияСФормы(Команда)

    ОткрытьВыборЗадания(ФормаТабельныйНомер);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция возвращает ключ уникальности оповещений пользователя.
// 
// Возвращаемое значение:
//  Строка - Ключ уникальности оповещений пользователя
&НаКлиенте
Функция КлючУникальностиОповещенийПользователя()

    Возврат "Штрихкод";

КонецФункции

// Открыть выбор задания.
// 
// Параметры:
//  ТабельныйНомер - Число - Табельный номер комплектовщика
&НаСервере
Процедура ОткрытьВыборЗадания(Знач ТабельныйНомер)

    //@skip-check use-non-recommended-method
    Сообщить(СтрШаблон("Поиск по табельному номеру '%1'", ТабельныйНомер));

КонецПроцедуры

// Процедура обновляет доступность кнопки для показа заданий в зависимости от того, заполнено ли
// поле ввода табельного номера.
&НаКлиенте
Процедура ОбновитьДоступностьКнопкиДляВхода()

    ТабельныйНомер = Число(Элементы.ТабельныйНомер.ТекстРедактирования);
    Элементы.КнопкаПоказатьЗадания.Доступность = ЗначениеЗаполнено(ТабельныйНомер);

КонецПроцедуры

#КонецОбласти