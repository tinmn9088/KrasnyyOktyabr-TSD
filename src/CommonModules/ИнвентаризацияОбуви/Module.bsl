// @strict-types
#Область ПрограммныйИнтерфейс

// Функция определяет количество штрихкодов, обработанных данным комплектовщиком.
// 
// Параметры:
//  ИнвентаризацияСклад - ДокументСсылка.ИнвентаризацияСклад
//  Комплектовщик - СправочникСсылка.Комплектовщики
// 
// Возвращаемое значение:
//  Число
Функция КоличествоШтрихкодовКомплектовщика(Знач ИнвентаризацияСклад, Знач Комплектовщик) Экспорт

    Запрос = Новый Запрос("ВЫБРАТЬ
                          |    КОЛИЧЕСТВО(*) КАК Количество
                          |ИЗ
                          |    Документ.ИнвентаризацияСклад.Штрихкоды КАК ВсеШтрихкоды
                          |ГДЕ
                          |    ВсеШтрихкоды.Ссылка = &Документ
                          |    И ВсеШтрихкоды.Комплектовщик = &Комплектовщик");

    Запрос.УстановитьПараметр("Комплектовщик", Комплектовщик);
    Запрос.УстановитьПараметр("Документ", ИнвентаризацияСклад);

    РезультатЗапроса = Запрос.Выполнить();
    Выборка = РезультатЗапроса.Выбрать();

    Если Не Выборка.Следующий() Тогда

        Возврат 0;

    КонецЕсли;
    
    //@skip-check property-return-type
    КоличествоШтрихкодов = Выборка.Количество; // Число

    Возврат КоличествоШтрихкодов;

КонецФункции

// Функция определяет был ли уже отсканирован штрихкод номера короба, и если нет,
// то добавляет его в табличную часть "Штрихкоды".
// 
// Параметры:
//  ИнвентаризацияСклад - ДокументСсылка.ИнвентаризацияСклад
//  Штрихкод - Строка
//  Комплектовщик - СправочникСсылка.Комплектовщики
//  НомерЯчейки - Строка
// 
// Возвращаемое значение:
//  См. НовоеОписаниеОбработкиШтрихкода
Функция ОбработатьШтрихкодОбуви(Знач ИнвентаризацияСклад, Знач Штрихкод, Знач Комплектовщик, Знач НомерЯчейки) Экспорт

    НачатьТранзакцию();

    Попытка

        ОписаниеОбработкиШтрихкода = НовоеОписаниеОбработкиШтрихкода();
        
        // 1. Проверка, что штрихкод еще не был обработан
        Запрос = Новый Запрос("ВЫБРАТЬ
                              |    ВсеШтрихкоды.Комплектовщик,
                              |    ВсеШтрихкоды.НомерСтроки КАК НомерШтрихкода,
                              |    ВсеШтрихкоды.Дата
                              |ИЗ
                              |    Документ.ИнвентаризацияСклад.Штрихкоды КАК ВсеШтрихкоды
                              |ГДЕ
                              |    ВсеШтрихкоды.Ссылка = &Документ
                              |    И ВсеШтрихкоды.Значение = &Штрихкод");

        Запрос.УстановитьПараметр("Документ", ИнвентаризацияСклад);
        Запрос.УстановитьПараметр("Штрихкод", Штрихкод);

        РезультатЗапроса = Запрос.Выполнить();
        Выборка = РезультатЗапроса.Выбрать();

        Если Выборка.Следующий() Тогда

            ОтменитьТранзакцию();
            
            //@skip-check property-return-type
            КомплектовщикОбработавшийШтрихкод = Выборка.Комплектовщик; // СправочникСсылка.Комплектовщики

            // Проверка, кто уже обработал штрихкод
            Если КомплектовщикОбработавшийШтрихкод = Комплектовщик Тогда
                
                //@skip-check property-return-type
                НомерШтрихкода = Выборка.НомерШтрихкода; // Число

                ОписаниеОбработкиШтрихкода.НомерШтрихкода = НомерШтрихкода;
                ОписаниеОбработкиШтрихкода.КодВозврата = КодВозвратаШтрихкодУжеОтсканирован();

            Иначе
                
                //@skip-check property-return-type
                ДатаПредыдущегоСканирования = Выборка.Дата; // Дата

                ОписаниеОбработкиШтрихкода.КомплектовщикПредыдущегоСканирования = КомплектовщикОбработавшийШтрихкод;
                ОписаниеОбработкиШтрихкода.ДатаПредыдущегоСканирования = ДатаПредыдущегоСканирования;
                ОписаниеОбработкиШтрихкода.КодВозврата = КодВозвратаШтрихкодУжеОтсканированДругим();

            КонецЕсли;

            Возврат ОписаниеОбработкиШтрихкода;

        КонецЕсли;
  
        // 2. Добавление штрихкода в документ
        ИнвентаризацияСкладОбъект = ИнвентаризацияСклад.ПолучитьОбъект();

        НовыйШтрихкод = ИнвентаризацияСкладОбъект.Штрихкоды.Добавить();

        НовыйШтрихкод.Дата = ТекущаяДатаСеанса();
        НовыйШтрихкод.НомерЯчейки = НомерЯчейки;
        НовыйШтрихкод.Комплектовщик = Комплектовщик;
        НовыйШтрихкод.Значение = Штрихкод;

        ОписаниеОбработкиШтрихкода.НомерШтрихкода = НовыйШтрихкод.НомерСтроки;

        ИнвентаризацияСкладОбъект.Записать();

        ОписаниеОбработкиШтрихкода.КодВозврата = КодВозвратаУспех();

        ЗафиксироватьТранзакцию();

        Возврат ОписаниеОбработкиШтрихкода;

    Исключение

        ОтменитьТранзакцию();
        ВызватьИсключение;

    КонецПопытки;

КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Функция создает описание обработки штрихкода.
// 
// Возвращаемое значение:
//  Структура - Описание обработки штрихкода:
// * КодВозврата - Число - Код, указывающий на результат обработки штрихкода
// * НомерШтрихкода - Неопределено, Число - Номер строки табличной части "Штрихкоды" документа "ИнвентаризацияСклад"
// * ДатаПредыдущегоСканирования - Неопределено, Дата - Дата предыдущего сканирования, если штрихкод уже был отсканирован
// * КомплектовщикПредыдущегоСканирования - Неопределено, СправочникСсылка.Комплектовщики - Комплектовщие предыдущего 
//                                                                                          сканирования, если штрихкод уже был
//                                                                                          отсканирован другим комплектовщиком
Функция НовоеОписаниеОбработкиШтрихкода() Экспорт

    ОписаниеОбработкиШтрихкода = Новый Структура;

    ОписаниеОбработкиШтрихкода.Вставить("КодВозврата", КодВозвратаУспех());
    ОписаниеОбработкиШтрихкода.Вставить("НомерШтрихкода", Неопределено);
    ОписаниеОбработкиШтрихкода.Вставить("ДатаПредыдущегоСканирования", Неопределено);
    ОписаниеОбработкиШтрихкода.Вставить("КомплектовщикПредыдущегоСканирования", Неопределено);

    Возврат ОписаниеОбработкиШтрихкода;

КонецФункции

#КонецОбласти