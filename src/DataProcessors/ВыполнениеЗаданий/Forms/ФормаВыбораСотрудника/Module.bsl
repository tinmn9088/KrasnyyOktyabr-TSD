// @strict-types
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
    
    // Отобразить подсказку про возможность отсканировать штрихкод с табельным
    // номером, если на клиенте настроено сканирование штрихкодов
    Элементы.ПодсказкаОтсканируйтеШтрихкод.Видимость = ВнешниеКомпонентыКлиент.НастроеноСканированиеШтрихкодов();

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

    Если ВводДоступен() И ИмяСобытия = ОповещенияФормыКлиент.ИмяСобытияСканированияШтрихкода() Тогда

        // 1. Получение табельного номера из отсканированного штрихкода
        Штрихкод = Строка(Параметр);    
	  
        // 2.1. Проверка длины штрихкода
        Если СтрДлина(Штрихкод) > 20 Тогда

#Если МобильныйКлиент Или МобильноеПриложениеКлиент Тогда

            СредстваМультимедиаКлиент.ВоспроизвестиЗвуковоеОповещениеОбОшибкеСканированияШтрихкода();

#КонецЕсли

            ОповещенияПользователяКлиент.ПоказатьВажноеОповещениеОшибка("Неверный штрихкод",
                                                                        "Длиннее 20 символов",
                                                                        КлючУникальностиОповещенийПользователя());
            Возврат;

        КонецЕсли
        ;
        
        // 3. Заполнение поля ввода табельного номера
        ФормаТабельныйНомер = Штрихкод;
        ОбновитьОтображениеДанных(Элементы.ТабельныйНомер);
        ОбновитьДоступностьКнопкиДляВхода();
        
        // 4. Открытие выбора задания для сотрудника
#Если МобильныйКлиент Или МобильноеПриложениеКлиент Тогда

        СредстваМультимедиаКлиент.ВоспроизвестиЗвуковоеОповещениеОбУспешномСканированииШтрихкода();

#КонецЕсли

        ОповещенияПользователяКлиент.ПоказатьОповещение("Табельный номер отсканирован",
                                                        Штрихкод,
                                                        КлючУникальностиОповещенийПользователя());

        ОткрытьВыборЗадания(Штрихкод);

    КонецЕсли

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ФормаТабельныйНомерИзменениеТекстаРедактирования(Элемент, Текст, СтандартнаяОбработка)

    ОбновитьДоступностьКнопкиДляВхода();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// Процедура открывает выбор задания для сотрудника с табельным номером из поля ввода.
// 
// Параметры:
//  Команда - КомандаФормы
&НаКлиенте
Процедура ОткрытьВыборЗаданияСФормы(Команда)

    ОткрытьВыборЗадания(ФормаТабельныйНомер);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция возвращает ключ уникальности оповещений пользователя.
// 
// Возвращаемое значение:
//  Строка
&НаКлиенте
Функция КлючУникальностиОповещенийПользователя()

    Возврат ИмяФормы;

КонецФункции

// Процедура выполняет поиск сотрудника по табельному номеру и открывает форму выбора задания,
// если сотрудник найден.
// 
// Параметры:
//  ТабельныйНомер - Строка
&НаКлиенте
Процедура ОткрытьВыборЗадания(Знач ТабельныйНомер)

    // 1. Поиск сотрудника по введенному табельному номеру
    Сотрудник = НайтиСотрудникаПоТабельномуНомеру(ТабельныйНомер);
    
    // 2. Проверка, что сотрудник был найден
    Если Не ЗначениеЗаполнено(Сотрудник) Тогда

#Если МобильныйКлиент Или МобильноеПриложениеКлиент Тогда

        СредстваМультимедиаКлиент.ВоспроизвестиЗвуковоеОповещениеОбОшибкеСканированияШтрихкода();

#КонецЕсли

        ОповещенияПользователяКлиент.ПоказатьВажноеОповещениеОшибка("Сотрудник не найден",
                                                                    ТабельныйНомер,
                                                                    КлючУникальностиОповещенийПользователя());
        Возврат;

    КонецЕсли
    ;
    
    // 3. Открытие формы выбора задания
    ПараметрыФормы = Новый Структура("Комплектовщик", Сотрудник);

    ОткрытьФорму("Документ.Задание.Форма.ФормаВыбораЗаданияДляКомплектовщика", ПараметрыФормы);

КонецПроцедуры

// Процедура обновляет доступность кнопки для выбора заданий в зависимости от того, заполнено ли
// поле ввода табельного номера.
&НаКлиенте
Процедура ОбновитьДоступностьКнопкиДляВхода()

    ТабельныйНомер = Элементы.ТабельныйНомер.ТекстРедактирования;
    Элементы.КнопкаПоказатьЗадания.Доступность = ЗначениеЗаполнено(ТабельныйНомер);

КонецПроцедуры

// Функция выполняет поиск сотрдуника по табельному номеру.
// 
// Параметры:
//  ТабельныйНомер - Строка
// 
// Возвращаемое значение:
//  СправочникСсылка.Комплектовщики - Сотрудник с нужным табельным номером или пустая ссылка
&НаСервере
Функция НайтиСотрудникаПоТабельномуНомеру(Знач ТабельныйНомер)

    Возврат Справочники.Комплектовщики.НайтиПоТабельномуНомеру(ТабельныйНомер);

КонецФункции

#КонецОбласти