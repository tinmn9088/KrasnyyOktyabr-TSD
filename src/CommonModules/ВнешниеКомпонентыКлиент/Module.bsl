// @strict-types
#Область ПрограммныйИнтерфейс

// Функция возвращает Истина, если было настроено сканирование штрихкодов
// с использованием внешней компоненты. 
// 
// Возвращаемое значение:
//  Булево
Функция НастроеноСканированиеШтрихкодов() Экспорт

#Если МобильныйКлиент Или МобильноеПриложениеКлиент Тогда

    Возврат Истина;

#КонецЕсли

    Возврат Ложь;

КонецФункции

// Процедура устанавливает и подключает внешние компоненты. Если при установке
// или подключении внешней компоненты возникает ошибка, процедура вызывает исключение.
// 
// Подключает внешние компоненты:
//  * Для сканера штрихкодов
// 
// Параметры:
//  ВнешниеКомпоненты - См. НоваяКоллекцияВнешнихКомпонент
Процедура НастроитьВнешниеКомпоненты(ВнешниеКомпоненты) Экспорт

#Если МобильныйКлиент Или МобильноеПриложениеКлиент Тогда

    // Настройка драйвера для сканера штрихкодов и добавление в коллекцию внешних компонент
    СканерШтрихкодаКлиент.НастроитьДрайвер(ВнешниеКомпоненты);

#КонецЕсли

КонецПроцедуры

// Процедура обрабатывает сообщения внешних компонент.
// 
// Параметры:
//  ОписаниеВнешнегоСобытия - См. НовоеОписаниеВнешнегоСобытия
//  ВнешниеКомпоненты - См. НоваяКоллекцияВнешнихКомпонент
Процедура ОбработатьВнешнееСобытие(ОписаниеВнешнегоСобытия, ВнешниеКомпоненты) Экспорт

    Если ЗначениеЗаполнено(ВнешниеКомпоненты) Тогда

#Если МобильныйКлиент Или МобильноеПриложениеКлиент Тогда

        // Проверка того, что драйвер сканера штрихкодов был настроен
        Если ВнешниеКомпоненты[СканерШтрихкодаКлиент.КлючВнешнейКомпоненты()] <> Неопределено Тогда

            // Обработка сканирования штрихкода
            СканерШтрихкодаКлиент.ОбработатьВнешнееСобытие(ОписаниеВнешнегоСобытия);
            Возврат;

        КонецЕсли;

#КонецЕсли

    КонецЕсли

КонецПроцедуры

// Процедура отключает внешние компоненты.
// 
// Параметры:
//  ВнешниеКомпоненты - См. НоваяКоллекцияВнешнихКомпонент
Процедура ОтключитьВнешниеКомпоненты(ВнешниеКомпоненты) Экспорт

    Для Каждого КлючИЗначение Из ВнешниеКомпоненты Цикл

        ИмяВнешнейКомпоненты = КлючИЗначение.Ключ;
        ВнешняяКомпонента = КлючИЗначение.Значение;

#Если МобильныйКлиент Или МобильноеПриложениеКлиент Тогда

        Если ИмяВнешнейКомпоненты = СканерШтрихкодаКлиент.КлючВнешнейКомпоненты() Тогда

            // Отключение драйвера для сканера штрихкодов
            СканерШтрихкодаКлиент.ОтключитьДрайвер(ВнешняяКомпонента);

        КонецЕсли;

#КонецЕсли

    КонецЦикла

КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Функция создает новую коллекцию для внешних компонент.
// 
// Возвращаемое значение:
//  Соответствие из КлючИЗначение - Коллекция для внешних компонент:
// * Ключ - Строка
// * Значение - Произвольный
Функция НоваяКоллекцияВнешнихКомпонент() Экспорт

    Возврат Новый Соответствие;

КонецФункции

// Функция создает описание внешнего события.
// 
// Возвращаемое значение:
//  Структура - Описание внешнего события:
// * Источник - Строка - Источник события
// * Событие - Строка - Имя события
// * Данные - Строка - Данные события
Функция НовоеОписаниеВнешнегоСобытия() Экспорт

    Возврат Новый Структура("Источник, Событие, Данные", "", "", "");

КонецФункции

#КонецОбласти