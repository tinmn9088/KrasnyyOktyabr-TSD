#Если МобильныйКлиент Или МобильноеПриложениеКлиент Тогда

#Область ПрограммныйИнтерфейс

// Функция возвращает имя внешней компоненты.
// 
// Возвращаемое значение:
//  Строка - Имя
Функция ПолучитьИмя() Экспорт

    Возврат "Scanner.NewlandN7CachalotPro";

КонецФункции

// Процедура настраивает драйвер для сканера штрихкода Newland N7 Cachalot Pro и добавляет его в
// коллекцию ВнешниеКомпоненты.
// 
// Параметры:
//  ВнешниеКомпоненты - См. ВнешниеКомпонентыМенеджерКлиент.СоздатьКоллекциюВнешнихКомпонент
Процедура НастроитьДрайвер(ВнешниеКомпоненты) Экспорт

    // Вызов УстановитьВнешнююКомпоненту
    МестоположениеДрайвера = УстановитьДрайвер();
    
    // Вызов ПодключитьВнешнююКомпоненту и настройка драйвера
    ОбъектДрайвера = ПодключитьДрайвер(МестоположениеДрайвера);
    
    // Добавление драйвера в коллекцию ВнешниеКомпоненты
    ВнешниеКомпоненты.Вставить(ПолучитьИмя(), ОбъектДрайвера);

КонецПроцедуры

// Процедура посылает оповещение
// 
// Параметры:
//  ОписаниеВнешнегоСобытия - См. ВнешниеКомпонентыМенеджерКлиент.СоздатьОписаниеВнешнегоСобытия
Процедура ОбработатьВнешнееСобытие(ОписаниеВнешнегоСобытия) Экспорт

    // TODO: Обработать событие

КонецПроцедуры

// Процедура отключает драйвер.
// 
// Параметры:
//  ВнешняяКомпонента - Произвольный
Процедура ОтключитьДрайвер(ВнешняяКомпонента) Экспорт

    ВнешняяКомпонента.Отключить(ПолучитьИмя());

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция устанавливает драйвер и возвращает местоположение, по которому
// он был найден. Если при установке возникла ошибка, функция вызывает исключение.
// 
// Возвращаемое значение:
//  Строка - Местоположение драйвера
Функция УстановитьДрайвер()

    МестоположениеДрайвера = "ОбщийМакет.Драйвер1ССканерШтрихкода";

    Попытка
        
        //@skip-check bsl-legacy-check-static-feature-access
        УстановитьВнешнююКомпоненту(МестоположениеДрайвера);

    Исключение

        СообщениеОбОшибке = СтрШаблон("Ошибка при установке внешней компоненты '%1': %2",
                                      МестоположениеДрайвера,
                                      ОписаниеОшибки());
        ВызватьИсключение СообщениеОбОшибке;

    КонецПопытки;

    Возврат МестоположениеДрайвера;

КонецФункции

// Функция подключает драйвер и устанавливает ему параметры. Если при подключении
// или установке параметров произошла ошибка, функция вызывает исключение. 
// 
// Параметры:
//  МестоположениеДрайвера - Строка - Местоположение драйвера
// 
// Возвращаемое значение:
//  Произвольный - Объект драйвера
Функция ПодключитьДрайвер(МестоположениеДрайвера)

    // Подключение внешней компоненты
    ВнешняяКомпонентаПодключена = ПодключитьВнешнююКомпоненту(МестоположениеДрайвера,
                                                              "InputDevice",
                                                              ТипВнешнейКомпоненты.Native);

    Если Не ВнешняяКомпонентаПодключена Тогда

        СообщениеОбОшибке = СтрШаблон("Ошибка при подключении внешней компоненты '%1'", МестоположениеДрайвера);
        ВызватьИсключение СообщениеОбОшибке;

    КонецЕсли;

    // Создание объекта драйвера
    ВидОбъектаДрайвера = "AddIn.InputDevice.InputDevice";

    Попытка

        ОбъектДрайвера = Новый (ВидОбъектаДрайвера);

        // Настройка объекта драйвера
        ОбъектДрайвера.УстановитьПараметр("EquipmentType", "УстройствоВвода");
        ОбъектДрайвера.УстановитьПараметр("BluetoothDevice", "BROADCAST");
        ОбъектДрайвера.УстановитьПараметр("Prefix", -1);
        ОбъектДрайвера.УстановитьПараметр("Suffix", 3338);
        ОбъектДрайвера.УстановитьПараметр("OutputDataType", 0);
        ОбъектДрайвера.УстановитьПараметр("GSSymbolKey", 7);
        ОбъектДрайвера.УстановитьПараметр("Timeout", 75);
        ОбъектДрайвера.УстановитьПараметр("ProcessKeyEventTypes", Ложь);
        ОбъектДрайвера.УстановитьПараметр("DataBits", 8);
        ОбъектДрайвера.УстановитьПараметр("StopBits", 0);
        ОбъектДрайвера.УстановитьПараметр("Parity", 0);
        ОбъектДрайвера.УстановитьПараметр("Speed", 9600);
        ОбъектДрайвера.УстановитьПараметр("COMEncoding", "UTF-8");
        ОбъектДрайвера.УстановитьПараметр("StandardAction", "NONE");
        ОбъектДрайвера.УстановитьПараметр("StandardCategory", "NONE");
        ОбъектДрайвера.УстановитьПараметр("StandardExtra", "NONE");
        ОбъектДрайвера.УстановитьПараметр("Extra", "SCAN_BARCODE1");
        ОбъектДрайвера.УстановитьПараметр("ExtraType", "String");
        ОбъектДрайвера.УстановитьПараметр("Action", "nlscan.action.SCANNER_RESULT");
        ОбъектДрайвера.УстановитьПараметр("Category", "");
        ОбъектДрайвера.УстановитьПараметр("LogType", 0);
        ОбъектДрайвера.УстановитьПараметр("LogFilePath", "/storage/emulated/0/Download/scan_opos.txt");

    Исключение

        СообщениеОбОшибке = СтрШаблон("Ошибка при настройке объекта '%1' при настройке внешней компоненты '%2': %3",
                                      ВидОбъектаДрайвера,
                                      МестоположениеДрайвера,
                                      ОписаниеОшибки());
        ВызватьИсключение СообщениеОбОшибке;

    КонецПопытки;

    // Подключение объекта драйвера
    ОбъектДрайвераПодключен = ОбъектДрайвера.Подключить(ПолучитьИмя());

    Если Не ОбъектДрайвераПодключен Тогда

        СообщениеОбОшибке = СтрШаблон("Ошибка при подключении объекта '%1' при настройке внешней компоненты '%2'",
                                      ВидОбъектаДрайвера,
                                      МестоположениеДрайвера);
        ВызватьИсключение СообщениеОбОшибке;

    КонецЕсли;

    Возврат ОбъектДрайвера;

КонецФункции

#КонецОбласти

#КонецЕсли