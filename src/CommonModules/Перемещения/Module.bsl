// @strict-types
#Область ПрограммныйИнтерфейс

// Функция определяет существует ли номенклатура с данным штрихкодом и либо добавляет товар
// в перемещение товаров, либо увеличивает счетчик количества.
// 
// Параметры:
//  ПеремещениеТоваров - ДокументСсылка.ПеремещениеТоваров
//  ШтрихкодТовара - Строка
//  ТоварБылДобавлен - Неопределено, Булево - Выходной
// 
// Возвращаемое значение:
//  См. НовоеОписаниеОбработкиШтрихкода
Функция ОбработатьШтрихкодТовара(Знач ПеремещениеТоваров, Знач ШтрихкодТовара, ТоварБылДобавлен) Экспорт

    НачатьТранзакцию();

    Попытка

        ОписаниеОбработкиШтрихкода = НовоеОписаниеОбработкиШтрихкода();
        
        // 1. Поиск номенклатуры по штрихкоду 
        Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
                              |    ВсеШтрихкодыНоменклатуры.Ссылка КАК Номенклатура
                              |ИЗ
                              |    Справочник.НоменклатураРозница.Штрихкоды КАК ВсеШтрихкодыНоменклатуры
                              |ГДЕ
                              |    ВсеШтрихкодыНоменклатуры.Штрихкод = &Штрихкод");

        Запрос.УстановитьПараметр("Штрихкод", ШтрихкодТовара);
        РезультатЗапроса = Запрос.Выполнить();
        Выборка = РезультатЗапроса.Выбрать();

        Если Не Выборка.Следующий() Тогда

            ОтменитьТранзакцию();

            ОписаниеОбработкиШтрихкода.КодВозврата = КодВозвратаНеНайденаНоменклатура();

            Возврат ОписаниеОбработкиШтрихкода;

        КонецЕсли;

        //@skip-check property-return-type
        НоменклатураТовара = Выборка.Номенклатура; // СправочникСсылка.НоменклатураРозница
        
        // 2. Получение существующего ил добавление нового товара в перемещение
        Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
                              |    ВсеТовары.НомерСтроки КАК НомерТовара
                              |ИЗ
                              |    Документ.ПеремещениеТоваров.Товары КАК ВсеТовары
                              |ГДЕ
                              |    ВсеТовары.Ссылка = &Документ
                              |    И ВсеТовары.Номенклатура = &Номенклатура
                              |    И ВсеТовары.Штрихкод = &Штрихкод");

        Запрос.УстановитьПараметр("Документ", ПеремещениеТоваров);
        Запрос.УстановитьПараметр("Номенклатура", НоменклатураТовара);
        Запрос.УстановитьПараметр("Штрихкод", ШтрихкодТовара);
        РезультатЗапроса = Запрос.Выполнить();
        Выборка = РезультатЗапроса.Выбрать();

        ПеремещениеТоваровОбъект = ПеремещениеТоваров.ПолучитьОбъект();

        ТоварЕстьВПеремещении = Выборка.Следующий();

        Товар = ?(ТоварЕстьВПеремещении,
                  ТоварИзПеремещения(ПеремещениеТоваровОбъект, Выборка),
                  НовыйТоварВПеремещении(ПеремещениеТоваровОбъект, НоменклатураТовара, ШтрихкодТовара));

        ТоварБылДобавлен = Не ТоварЕстьВПеремещении;      
        
        // 4. Увеличение счетчика количества для найденного товара
        ОписаниеОбработкиШтрихкода.НомерТовара = Товар.НомерСтроки;
        ОписаниеОбработкиШтрихкода.ПредыдущееКоличество = Товар.Количество;

        Товар.Количество = Товар.Количество + 1;

        ОписаниеОбработкиШтрихкода.НовоеКоличество = Товар.Количество;

        ПеремещениеТоваровОбъект.Записать();

        ОписаниеОбработкиШтрихкода.КодВозврата = КодВозвратаУспех();

        ЗафиксироватьТранзакцию();

        Возврат ОписаниеОбработкиШтрихкода;

    Исключение

        ОтменитьТранзакцию();
        ВызватьИсключение;

    КонецПопытки;

КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Функция создает описание обработки штрихкода.
// 
// Возвращаемое значение:
//  Структура - Описание обработки штрихкода:
// * КодВозврата - Число - Код, указывающий на результат обработки штрихкода
// * НомерТовара - Неопределено, Число - Номер строки табличной части "Товары" документа "ПеремещениеТоваров",
//                                       которой соответствовал обрабатываемый штрихкод
// * ПредыдущееКоличество - Неопределено, Число - Значение реквизита "Количество" до обработки штрихкода
// * НовоеКоличество - Неопределено, Число - Значение реквизита "Количество" после обработки штрихкода
Функция НовоеОписаниеОбработкиШтрихкода() Экспорт

    ОписаниеОбработкиШтрихкода = Новый Структура;

    ОписаниеОбработкиШтрихкода.Вставить("КодВозврата", КодВозвратаУспех());
    ОписаниеОбработкиШтрихкода.Вставить("НомерТовара", Неопределено);
    ОписаниеОбработкиШтрихкода.Вставить("ПредыдущееКоличество", Неопределено);
    ОписаниеОбработкиШтрихкода.Вставить("НовоеКоличество", Неопределено);

    Возврат ОписаниеОбработкиШтрихкода;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция извлекает номер товара из результата запроса и по нему строку
// из табличной части "Товары".
// 
// Параметры:
//  ПеремещениеТоваровОбъект - ДокументОбъект.ПеремещениеТоваров
//  Выборка - ВыборкаИзРезультатаЗапроса
// 
// Возвращаемое значение:
//  СтрокаТабличнойЧасти - Строка табличной части "Товары"  
Функция ТоварИзПеремещения(ПеремещениеТоваровОбъект, Выборка)
    
    //@skip-check property-return-type
    НомерТовара = Выборка.НомерТовара; // Число
    Возврат ПеремещениеТоваровОбъект.Товары.Получить(НомерТовара - 1);

КонецФункции

// Функция добавляет новую строку в табличную часть "Товары".
// 
// Параметры:
//  ПеремещениеТоваровОбъект - ДокументОбъект.ПеремещениеТоваров
//  Номенклатура - СправочникСсылка.НоменклатураРозница
//  Штрихкод - Строка
// 
// Возвращаемое значение:
//  СтрокаТабличнойЧасти - Строка табличной части "Товары" 
Функция НовыйТоварВПеремещении(ПеремещениеТоваровОбъект, Номенклатура, Штрихкод)

    НовыйТовар = ПеремещениеТоваровОбъект.Товары.Добавить();

    НовыйТовар.Номенклатура = Номенклатура;
    НовыйТовар.Количество = 0;
    НовыйТовар.Штрихкод = Штрихкод;

    Возврат НовыйТовар;

КонецФункции

#КонецОбласти